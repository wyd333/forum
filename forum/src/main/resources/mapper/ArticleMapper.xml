<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learnings.forum.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.learnings.forum.model.Article">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="boardId" jdbcType="BIGINT" property="boardId" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="visitCount" jdbcType="INTEGER" property="visitCount" />
    <result column="replyCount" jdbcType="INTEGER" property="replyCount" />
    <result column="likeCount" jdbcType="INTEGER" property="likeCount" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="deleteState" jdbcType="TINYINT" property="deleteState" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.learnings.forum.model.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, boardId, userId, title, visitCount, replyCount, likeCount, state, deleteState, 
    createTime, updateTime
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.learnings.forum.model.Article" useGeneratedKeys="true" keyProperty="id">
    insert into t_article (id, boardId, userId, 
      title, visitCount, replyCount, 
      likeCount, state, deleteState, 
      createTime, updateTime, content
      )
    values (#{id,jdbcType=BIGINT}, #{boardId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{title,jdbcType=VARCHAR}, #{visitCount,jdbcType=INTEGER}, #{replyCount,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER}, #{state,jdbcType=TINYINT}, #{deleteState,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.learnings.forum.model.Article" useGeneratedKeys="true" keyProperty="id">
    insert into t_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="boardId != null">
        boardId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="visitCount != null">
        visitCount,
      </if>
      <if test="replyCount != null">
        replyCount,
      </if>
      <if test="likeCount != null">
        likeCount,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="deleteState != null">
        deleteState,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="boardId != null">
        #{boardId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="visitCount != null">
        #{visitCount,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null">
        #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="deleteState != null">
        #{deleteState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learnings.forum.model.Article">
    update t_article
    <set>
      <if test="boardId != null">
        boardId = #{boardId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="visitCount != null">
        visitCount = #{visitCount,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null">
        replyCount = #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        likeCount = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="deleteState != null">
        deleteState = #{deleteState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.learnings.forum.model.Article">
    update t_article
    set boardId = #{boardId,jdbcType=BIGINT},
      userId = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      visitCount = #{visitCount,jdbcType=INTEGER},
      replyCount = #{replyCount,jdbcType=INTEGER},
      likeCount = #{likeCount,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT},
      deleteState = #{deleteState,jdbcType=TINYINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learnings.forum.model.Article">
    update t_article
    set boardId = #{boardId,jdbcType=BIGINT},
      userId = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      visitCount = #{visitCount,jdbcType=INTEGER},
      replyCount = #{replyCount,jdbcType=INTEGER},
      likeCount = #{likeCount,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT},
      deleteState = #{deleteState,jdbcType=TINYINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>